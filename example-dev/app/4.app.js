webpackJsonp([4],{

/***/ 17:
/***/ function(module, exports, __webpack_require__) {

	var __vue_script__, __vue_template__
	__vue_script__ = __webpack_require__(18)
	if (__vue_script__ &&
	    __vue_script__.__esModule &&
	    Object.keys(__vue_script__).length > 1) {
	  console.warn("[vue-loader] example-dev/src/views/overlay-page.vue: named exports in *.vue files are ignored.")}
	__vue_template__ = __webpack_require__(19)
	module.exports = __vue_script__ || {}
	if (module.exports.__esModule) module.exports = module.exports.default
	if (__vue_template__) {
	(typeof module.exports === "function" ? (module.exports.options || (module.exports.options = {})) : module.exports).template = __vue_template__
	}
	if (false) {(function () {  module.hot.accept()
	  var hotAPI = require("vue-hot-reload-api")
	  hotAPI.install(require("vue"), false)
	  if (!hotAPI.compatible) return
	  var id = "_v-99c1e6ca/overlay-page.vue"
	  if (!module.hot.data) {
	    hotAPI.createRecord(id, module.exports)
	  } else {
	    hotAPI.update(id, module.exports, __vue_template__)
	  }
	})()}

/***/ },

/***/ 18:
/***/ function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	// <template>
	//   <section class="hy_c-module hy_t-grey">
	//     <div class="hy_o-wrapper">
	//       <h2 class="hy_c-headline hy_c-headline--h2 hy_t-grey">Overlay System</h2>
	//       <hr class="hy_u-space-mb-2">
	//       <p>
	//         <button v-overlay-opener="overlay-1" class="hy_c-button hy_c-button--link hy_t-purple" type="button" role="button">
	//           Open overlay #1 <i class="hy_c-icon hy_c-icon--arrow-right-circled hy_c-button__icon"></i>
	//         </button>
	//       </p>
	//       <p>
	//         <button v-overlay-opener="overlay-2" class="hy_c-button hy_c-button--link hy_t-purple" type="button" role="button">
	//           Open overlay #2 <i class="hy_c-icon hy_c-icon--arrow-right-circled hy_c-button__icon"></i>
	//         </button>
	//       </p>
	//     </div>
	//   </section>
	//
	//  <overlay-container>
	//         <overlay overlay-key="overlay-1">
	//           <h4 class="hy_c-headline hy_c-headline--h4" slot="overlay-header">This is overlay #1</h4>
	//           <article slot="overlay-body">
	//               Overlay #1 body
	//           </article>
	//         </overlay>
	//         <overlay overlay-key="overlay-2">
	//           <h4 class="hy_c-headline hy_c-headline--h4" slot="overlay-header">This is overlay #2</h4>
	//           <article slot="overlay-body">
	//               Overlay #2 body
	//           </article>
	//         </overlay>
	//       </overlay-container>
	// </template>
	//
	// <script>
	
	exports.default = {};
	// </script>

	/* generated by vue-loader */

/***/ },

/***/ 19:
/***/ function(module, exports) {

	module.exports = "\n <section class=\"hy_c-module hy_t-grey\">\n   <div class=\"hy_o-wrapper\">\n     <h2 class=\"hy_c-headline hy_c-headline--h2 hy_t-grey\">Overlay System</h2>\n     <hr class=\"hy_u-space-mb-2\">\n     <p>\n       <button v-overlay-opener=\"overlay-1\" class=\"hy_c-button hy_c-button--link hy_t-purple\" type=\"button\" role=\"button\">\n         Open overlay #1 <i class=\"hy_c-icon hy_c-icon--arrow-right-circled hy_c-button__icon\"></i>\n       </button>\n     </p>\n     <p>\n       <button v-overlay-opener=\"overlay-2\" class=\"hy_c-button hy_c-button--link hy_t-purple\" type=\"button\" role=\"button\">\n         Open overlay #2 <i class=\"hy_c-icon hy_c-icon--arrow-right-circled hy_c-button__icon\"></i>\n       </button>\n     </p>\n   </div>\n </section>\n\n<overlay-container>\n       <overlay overlay-key=\"overlay-1\">\n         <h4 class=\"hy_c-headline hy_c-headline--h4\" slot=\"overlay-header\">This is overlay #1</h4>\n         <article slot=\"overlay-body\">\n             Overlay #1 body\n         </article>\n       </overlay>\n       <overlay overlay-key=\"overlay-2\">\n         <h4 class=\"hy_c-headline hy_c-headline--h4\" slot=\"overlay-header\">This is overlay #2</h4>\n         <article slot=\"overlay-body\">\n             Overlay #2 body\n         </article>\n       </overlay>\n     </overlay-container>\n";

/***/ }

});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9leGFtcGxlLWRldi9zcmMvdmlld3Mvb3ZlcmxheS1wYWdlLnZ1ZSIsIndlYnBhY2s6Ly8vb3ZlcmxheS1wYWdlLnZ1ZSIsIndlYnBhY2s6Ly8vLi9leGFtcGxlLWRldi9zcmMvdmlld3Mvb3ZlcmxheS1wYWdlLnZ1ZT8yNWEzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnR0FBK0Y7QUFDL0Y7QUFDQSxhQUFpQixjQUFjO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUc7QUFDSDtBQUNBO0FBQ0EsRUFBQyxJOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7bUJDZUQ7Ozs7Ozs7Ozs7QUNyQ0EsaTFDIiwiZmlsZSI6IjQuYXBwLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIF9fdnVlX3NjcmlwdF9fLCBfX3Z1ZV90ZW1wbGF0ZV9fXG5fX3Z1ZV9zY3JpcHRfXyA9IHJlcXVpcmUoXCIhIWJhYmVsIS4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3NlbGVjdG9yLmpzP3R5cGU9c2NyaXB0JmluZGV4PTAhLi9vdmVybGF5LXBhZ2UudnVlXCIpXG5pZiAoX192dWVfc2NyaXB0X18gJiZcbiAgICBfX3Z1ZV9zY3JpcHRfXy5fX2VzTW9kdWxlICYmXG4gICAgT2JqZWN0LmtleXMoX192dWVfc2NyaXB0X18pLmxlbmd0aCA+IDEpIHtcbiAgY29uc29sZS53YXJuKFwiW3Z1ZS1sb2FkZXJdIGV4YW1wbGUtZGV2L3NyYy92aWV3cy9vdmVybGF5LXBhZ2UudnVlOiBuYW1lZCBleHBvcnRzIGluICoudnVlIGZpbGVzIGFyZSBpZ25vcmVkLlwiKX1cbl9fdnVlX3RlbXBsYXRlX18gPSByZXF1aXJlKFwiISF2dWUtaHRtbD9yZW1vdmVSZWR1bmRhbnRBdHRyaWJ1dGVzPWZhbHNlIS4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3NlbGVjdG9yLmpzP3R5cGU9dGVtcGxhdGUmaW5kZXg9MCEuL292ZXJsYXktcGFnZS52dWVcIilcbm1vZHVsZS5leHBvcnRzID0gX192dWVfc2NyaXB0X18gfHwge31cbmlmIChtb2R1bGUuZXhwb3J0cy5fX2VzTW9kdWxlKSBtb2R1bGUuZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzLmRlZmF1bHRcbmlmIChfX3Z1ZV90ZW1wbGF0ZV9fKSB7XG4odHlwZW9mIG1vZHVsZS5leHBvcnRzID09PSBcImZ1bmN0aW9uXCIgPyAobW9kdWxlLmV4cG9ydHMub3B0aW9ucyB8fCAobW9kdWxlLmV4cG9ydHMub3B0aW9ucyA9IHt9KSkgOiBtb2R1bGUuZXhwb3J0cykudGVtcGxhdGUgPSBfX3Z1ZV90ZW1wbGF0ZV9fXG59XG5pZiAobW9kdWxlLmhvdCkgeyhmdW5jdGlvbiAoKSB7ICBtb2R1bGUuaG90LmFjY2VwdCgpXG4gIHZhciBob3RBUEkgPSByZXF1aXJlKFwidnVlLWhvdC1yZWxvYWQtYXBpXCIpXG4gIGhvdEFQSS5pbnN0YWxsKHJlcXVpcmUoXCJ2dWVcIiksIGZhbHNlKVxuICBpZiAoIWhvdEFQSS5jb21wYXRpYmxlKSByZXR1cm5cbiAgdmFyIGlkID0gXCJfdi05OWMxZTZjYS9vdmVybGF5LXBhZ2UudnVlXCJcbiAgaWYgKCFtb2R1bGUuaG90LmRhdGEpIHtcbiAgICBob3RBUEkuY3JlYXRlUmVjb3JkKGlkLCBtb2R1bGUuZXhwb3J0cylcbiAgfSBlbHNlIHtcbiAgICBob3RBUEkudXBkYXRlKGlkLCBtb2R1bGUuZXhwb3J0cywgX192dWVfdGVtcGxhdGVfXylcbiAgfVxufSkoKX1cblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vZXhhbXBsZS1kZXYvc3JjL3ZpZXdzL292ZXJsYXktcGFnZS52dWVcbiAqKiBtb2R1bGUgaWQgPSAxN1xuICoqIG1vZHVsZSBjaHVua3MgPSA0XG4gKiovIiwiPHRlbXBsYXRlPlxuICA8c2VjdGlvbiBjbGFzcz1cImh5X2MtbW9kdWxlIGh5X3QtZ3JleVwiPlxuICAgIDxkaXYgY2xhc3M9XCJoeV9vLXdyYXBwZXJcIj5cbiAgICAgIDxoMiBjbGFzcz1cImh5X2MtaGVhZGxpbmUgaHlfYy1oZWFkbGluZS0taDIgaHlfdC1ncmV5XCI+T3ZlcmxheSBTeXN0ZW08L2gyPlxuICAgICAgPGhyIGNsYXNzPVwiaHlfdS1zcGFjZS1tYi0yXCI+XG4gICAgICA8cD5cbiAgICAgICAgPGJ1dHRvbiB2LW92ZXJsYXktb3BlbmVyPVwib3ZlcmxheS0xXCIgY2xhc3M9XCJoeV9jLWJ1dHRvbiBoeV9jLWJ1dHRvbi0tbGluayBoeV90LXB1cnBsZVwiIHR5cGU9XCJidXR0b25cIiByb2xlPVwiYnV0dG9uXCI+XG4gICAgICAgICAgT3BlbiBvdmVybGF5ICMxIDxpIGNsYXNzPVwiaHlfYy1pY29uIGh5X2MtaWNvbi0tYXJyb3ctcmlnaHQtY2lyY2xlZCBoeV9jLWJ1dHRvbl9faWNvblwiPjwvaT5cbiAgICAgICAgPC9idXR0b24+XG4gICAgICA8L3A+XG4gICAgICA8cD5cbiAgICAgICAgPGJ1dHRvbiB2LW92ZXJsYXktb3BlbmVyPVwib3ZlcmxheS0yXCIgY2xhc3M9XCJoeV9jLWJ1dHRvbiBoeV9jLWJ1dHRvbi0tbGluayBoeV90LXB1cnBsZVwiIHR5cGU9XCJidXR0b25cIiByb2xlPVwiYnV0dG9uXCI+XG4gICAgICAgICAgT3BlbiBvdmVybGF5ICMyIDxpIGNsYXNzPVwiaHlfYy1pY29uIGh5X2MtaWNvbi0tYXJyb3ctcmlnaHQtY2lyY2xlZCBoeV9jLWJ1dHRvbl9faWNvblwiPjwvaT5cbiAgICAgICAgPC9idXR0b24+XG4gICAgICA8L3A+XG4gICAgPC9kaXY+XG4gIDwvc2VjdGlvbj5cblxuIDxvdmVybGF5LWNvbnRhaW5lcj5cbiAgICAgICAgPG92ZXJsYXkgb3ZlcmxheS1rZXk9XCJvdmVybGF5LTFcIj5cbiAgICAgICAgICA8aDQgY2xhc3M9XCJoeV9jLWhlYWRsaW5lIGh5X2MtaGVhZGxpbmUtLWg0XCIgc2xvdD1cIm92ZXJsYXktaGVhZGVyXCI+VGhpcyBpcyBvdmVybGF5ICMxPC9oND5cbiAgICAgICAgICA8YXJ0aWNsZSBzbG90PVwib3ZlcmxheS1ib2R5XCI+XG4gICAgICAgICAgICAgIE92ZXJsYXkgIzEgYm9keVxuICAgICAgICAgIDwvYXJ0aWNsZT5cbiAgICAgICAgPC9vdmVybGF5PlxuICAgICAgICA8b3ZlcmxheSBvdmVybGF5LWtleT1cIm92ZXJsYXktMlwiPlxuICAgICAgICAgIDxoNCBjbGFzcz1cImh5X2MtaGVhZGxpbmUgaHlfYy1oZWFkbGluZS0taDRcIiBzbG90PVwib3ZlcmxheS1oZWFkZXJcIj5UaGlzIGlzIG92ZXJsYXkgIzI8L2g0PlxuICAgICAgICAgIDxhcnRpY2xlIHNsb3Q9XCJvdmVybGF5LWJvZHlcIj5cbiAgICAgICAgICAgICAgT3ZlcmxheSAjMiBib2R5XG4gICAgICAgICAgPC9hcnRpY2xlPlxuICAgICAgICA8L292ZXJsYXk+XG4gICAgICA8L292ZXJsYXktY29udGFpbmVyPlxuPC90ZW1wbGF0ZT5cblxuPHNjcmlwdD5cblxuZXhwb3J0IGRlZmF1bHQge1xufTtcbjwvc2NyaXB0PlxuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogb3ZlcmxheS1wYWdlLnZ1ZT9iZjI3MDIyNFxuICoqLyIsIm1vZHVsZS5leHBvcnRzID0gXCJcXG4gPHNlY3Rpb24gY2xhc3M9XFxcImh5X2MtbW9kdWxlIGh5X3QtZ3JleVxcXCI+XFxuICAgPGRpdiBjbGFzcz1cXFwiaHlfby13cmFwcGVyXFxcIj5cXG4gICAgIDxoMiBjbGFzcz1cXFwiaHlfYy1oZWFkbGluZSBoeV9jLWhlYWRsaW5lLS1oMiBoeV90LWdyZXlcXFwiPk92ZXJsYXkgU3lzdGVtPC9oMj5cXG4gICAgIDxociBjbGFzcz1cXFwiaHlfdS1zcGFjZS1tYi0yXFxcIj5cXG4gICAgIDxwPlxcbiAgICAgICA8YnV0dG9uIHYtb3ZlcmxheS1vcGVuZXI9XFxcIm92ZXJsYXktMVxcXCIgY2xhc3M9XFxcImh5X2MtYnV0dG9uIGh5X2MtYnV0dG9uLS1saW5rIGh5X3QtcHVycGxlXFxcIiB0eXBlPVxcXCJidXR0b25cXFwiIHJvbGU9XFxcImJ1dHRvblxcXCI+XFxuICAgICAgICAgT3BlbiBvdmVybGF5ICMxIDxpIGNsYXNzPVxcXCJoeV9jLWljb24gaHlfYy1pY29uLS1hcnJvdy1yaWdodC1jaXJjbGVkIGh5X2MtYnV0dG9uX19pY29uXFxcIj48L2k+XFxuICAgICAgIDwvYnV0dG9uPlxcbiAgICAgPC9wPlxcbiAgICAgPHA+XFxuICAgICAgIDxidXR0b24gdi1vdmVybGF5LW9wZW5lcj1cXFwib3ZlcmxheS0yXFxcIiBjbGFzcz1cXFwiaHlfYy1idXR0b24gaHlfYy1idXR0b24tLWxpbmsgaHlfdC1wdXJwbGVcXFwiIHR5cGU9XFxcImJ1dHRvblxcXCIgcm9sZT1cXFwiYnV0dG9uXFxcIj5cXG4gICAgICAgICBPcGVuIG92ZXJsYXkgIzIgPGkgY2xhc3M9XFxcImh5X2MtaWNvbiBoeV9jLWljb24tLWFycm93LXJpZ2h0LWNpcmNsZWQgaHlfYy1idXR0b25fX2ljb25cXFwiPjwvaT5cXG4gICAgICAgPC9idXR0b24+XFxuICAgICA8L3A+XFxuICAgPC9kaXY+XFxuIDwvc2VjdGlvbj5cXG5cXG48b3ZlcmxheS1jb250YWluZXI+XFxuICAgICAgIDxvdmVybGF5IG92ZXJsYXkta2V5PVxcXCJvdmVybGF5LTFcXFwiPlxcbiAgICAgICAgIDxoNCBjbGFzcz1cXFwiaHlfYy1oZWFkbGluZSBoeV9jLWhlYWRsaW5lLS1oNFxcXCIgc2xvdD1cXFwib3ZlcmxheS1oZWFkZXJcXFwiPlRoaXMgaXMgb3ZlcmxheSAjMTwvaDQ+XFxuICAgICAgICAgPGFydGljbGUgc2xvdD1cXFwib3ZlcmxheS1ib2R5XFxcIj5cXG4gICAgICAgICAgICAgT3ZlcmxheSAjMSBib2R5XFxuICAgICAgICAgPC9hcnRpY2xlPlxcbiAgICAgICA8L292ZXJsYXk+XFxuICAgICAgIDxvdmVybGF5IG92ZXJsYXkta2V5PVxcXCJvdmVybGF5LTJcXFwiPlxcbiAgICAgICAgIDxoNCBjbGFzcz1cXFwiaHlfYy1oZWFkbGluZSBoeV9jLWhlYWRsaW5lLS1oNFxcXCIgc2xvdD1cXFwib3ZlcmxheS1oZWFkZXJcXFwiPlRoaXMgaXMgb3ZlcmxheSAjMjwvaDQ+XFxuICAgICAgICAgPGFydGljbGUgc2xvdD1cXFwib3ZlcmxheS1ib2R5XFxcIj5cXG4gICAgICAgICAgICAgT3ZlcmxheSAjMiBib2R5XFxuICAgICAgICAgPC9hcnRpY2xlPlxcbiAgICAgICA8L292ZXJsYXk+XFxuICAgICA8L292ZXJsYXktY29udGFpbmVyPlxcblwiO1xuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9+L3Z1ZS1odG1sLWxvYWRlcj9yZW1vdmVSZWR1bmRhbnRBdHRyaWJ1dGVzPWZhbHNlIS4vfi92dWUtbG9hZGVyL2xpYi9zZWxlY3Rvci5qcz90eXBlPXRlbXBsYXRlJmluZGV4PTAhLi9leGFtcGxlLWRldi9zcmMvdmlld3Mvb3ZlcmxheS1wYWdlLnZ1ZVxuICoqIG1vZHVsZSBpZCA9IDE5XG4gKiogbW9kdWxlIGNodW5rcyA9IDRcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9